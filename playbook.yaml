---
- name: Configure server
  hosts: localhost
  become: yes
  become_method: sudo
  tasks:

  - name: Stat secrets file
    stat:
      path: "secret_vars.json"
    register: secrets_file
    tags:
      - never
      - install
      - upgrade

  - name: Check for existing installation
    fail: msg='PCM appears to have already been installed.  Use [--tags upgrade] to perform an upgrade.  Use [--tags install --skip-tags prevent-destruction] destroy all data and start over'
    when: secrets_file.stat.exists
    tags:
      - never
      - install
      - prevent-destruction

  - name: Add Docker s official GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
    tags:
      - never
      - install

  - name: Verify that we have the key with the fingerprint
    apt_key:
      id: 0EBFCD88
      state: present
    tags:
      - never
      - install

  - name: Get OS codename
    shell: lsb_release -cs
    register: os_codename
    tags:
      - never
      - install

  - name: Get Docker repository
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{os_codename.stdout}} stable
      state: present
      update_cache: yes
    tags:
      - never
      - install

  - name: Apt Update
    ansible.builtin.apt:
      update_cache: true
    tags:
      - never
      - install

  - name: Apt Upgrade
    ansible.builtin.apt:
      upgrade: "yes"
    tags:
      - never
      - install

  - name: GET Nodejs repo installer
    ansible.builtin.get_url:
      url: https://deb.nodesource.com/setup_16.x
      dest: ./nodesource_setup.sh
      mode: '0770'
    tags:
      - never
      - install

  - name: Install Nodejs repo
    shell: bash ./nodesource_setup.sh
    tags:
      - never
      - install

  - name: Install a list of packages
    ansible.builtin.apt:
      pkg:
        - nodejs
        - php8.1-xml
        - php8.1-curl
        - php8.1-common
        - php8.1-cli
        - ca-certificates
        - curl
        - gnupg
    tags:
      - never
      - install

  - name: Install Docker
    ansible.builtin.apt:
      pkg:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose
    tags:
      - never
      - install

  - name: Ensure group "docker" exists
    ansible.builtin.group:
      name: docker
      state: present
    tags:
      - never
      - install

  - name: Get current username
    set_fact:
      current_username: "{{ lookup('env', 'USER') }}"
    become: no
    tags:
      - never
      - install

  - name: Add {{current_username}} to docker group
    ansible.builtin.user:
      name: "{{ current_username }}"
      groups: docker
      append: yes
    tags:
      - never
      - install

  - name: Install composer2
    shell: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && php composer-setup.php && php -r "unlink('composer-setup.php');"
    tags:
      - never
      - install

  - name: Move composer2 to bin
    shell: mv composer.phar /usr/local/bin/composer
    tags:
      - never
      - install

  - name: Clear app directory (part 1)
    ansible.builtin.file:
      path: app
      state: absent
    tags:
      - never
      - install

  - name: Clear app directory (part 2)
    ansible.builtin.file:
      path: app
      state: directory
    become: no
    tags:
      - never
      - install

  - name: Clear database directory (part 1)
    ansible.builtin.file:
      path: database
      state: absent
    tags:
      - never
      - install

  - name: Clear database directory (part 2)
    ansible.builtin.file:
      path: database
      state: directory
    become: no
    tags:
      - never
      - install

  - name: Clone pcm_code repository
    git:
      repo: https://github.com/patchcablemgr/pcm_code.git
      dest: app
      accept_hostkey: yes
    become: no
    tags:
      - never
      - install

  - name: Pull pcm_code repository
    shell: "git -C {{playbook_dir}}/app pull"
    become: no
    tags:
      - never
      - upgrade

  - name: Install php modules (app)
    shell: cd app && composer install
    become: no
    tags:
      - never
      - install
      - upgrade

  - name: Generate App key
    shell: php app/artisan key:generate --show
    register: ArtisanAppKey
    tags:
      - never
      - install

  - name: Generate appuser database password
    shell: openssl rand -base64 32
    register: appuserDatabasePassword
    tags:
      - never
      - install

  - name: Generate pcmuser database password
    shell: openssl rand -base64 32
    register: pcmuserDatabasePassword
    tags:
      - never
      - install

  - name: Generate root database password
    shell: openssl rand -base64 32
    register: rootDatabasePassword
    tags:
      - never
      - install

  - name: Compile secrets
    set_fact:
      secret_vars:
        app_key: "{{ArtisanAppKey.stdout}}"
        db_appuser_pw: "{{ appuserDatabasePassword.stdout }}"
        db_pcmuser_pw: "{{ pcmuserDatabasePassword.stdout }}"
        db_root_pw: "{{ rootDatabasePassword.stdout }}"
    tags:
      - never
      - install

  - name: Store secrets
    copy:
      content: "{{ secret_vars | to_json }}"
      dest: "secret_vars.json"
    tags:
      - never
      - install

  - name: Read secrets
    set_fact:
      secret_vars_from_file: "{{ lookup('file', 'secret_vars.json') | from_json }}"
    tags:
      - never
      - install
      - upgrade

  - name: Template dot.env.j2 file to .env
    ansible.builtin.template:
      src: files/dot.env.j2
      dest: .env
      owner: root
      group: root
      mode: 0664
    tags:
      - never
      - install
      - upgrade

  - name: Set permissions {{playbook_dir}}/app/bootstrap/cache
    ansible.builtin.file:
      path: app/bootstrap/cache
      mode: 'o+rw'
      recurse: yes
    tags:
      - never
      - install

  - name: Set permissions {{playbook_dir}}/app/storage
    ansible.builtin.file:
      path: app/storage
      owner: root
      group: root
      mode: 0775
      recurse: yes
    tags:
      - never
      - install

  - name: Install node packages (app/app)
    shell: cd app && npm install
    become: no
    tags:
      - never
      - install
      - upgrade

  - name: Install node packages (app/frontend)
    shell: cd app/frontend && npm install
    become: no
    tags:
      - never
      - install
      - upgrade

  - name: Compile (app)
    shell: npm run --prefix app prod
    become: no
    tags:
      - never
      - install
      - upgrade

  - name: Run Laravel database migrations
    shell: "{{playbook_dir}}/app/vendor/bin/sail artisan tenants:migrate"
    tags:
      - never
      - upgrade

  - name: Run Laravel database seeders
    shell: "{{playbook_dir}}/app/vendor/bin/sail artisan tenants:seed"
    tags:
      - never
      - upgrade

  - name: Generate self-signed cert & key
    shell: openssl req -nodes -new -x509 -keyout {{playbook_dir}}/proxy/key/key.pem -out {{playbook_dir}}/proxy/cert/cert.pem -sha256 -days 365 -subj "/C=US/ST=Washington/CN=patchcablemgr.com"
    become: no
    tags:
      - never
      - install

  - name: Template patchcablemgr.service file to /lib/systemd/system/patchcablemgr.service
    ansible.builtin.template:
      src: files/patchcablemgr.service.j2
      dest: /lib/systemd/system/patchcablemgr.service
      owner: root
      group: root
      mode: 0644
    tags:
      - never
      - install

  - name: Enable and start patchcablemgr
    ansible.builtin.service:
      name: patchcablemgr
      enabled: true
      daemon_reload: true
      state: restarted
    tags:
      - never
      - install